@using BookApp.Web.Models.Borrow
@using BookApp.Web.Startup
@using BookApp.Web.Host.Controllers
@using BookApp.Web.Models.Common.Modals
@model BorrowListViewModel 
@{
    ViewBag.Title = L("Borrow");
    ViewBag.CurrentPageName = PageNames.Borrow;
}

@section scripts
    {
    <environment names="Development">
        <script src="~/view-resources/Views/Borrow/Index.js" asp-append-version="true"></script>
    </environment>    
}
    <section class="content-header">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12 col-sm-6 col-md-12">
                    <div class="info-box">
                        <span class="info-box-icon bg-info elevation-1">
                            <i class="fa fa-bookmark"></i>
                        </span>
                        <div class="info-box-content">
                            <h1 class="info-box-text">Borrower Information Dashboard</h1>
                        </div>
                        <span class="info-box-icon">
                            <a href="/Borrow/Create" class="save-button btn float-sm-right btn-lg" type="button" borrow-id="Id" style="border-radius: 50%;background-color:#0074B7;color:white">
                                <i class="fas fa-plus"></i>
                            </a>
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </section>   

    <div class="card">
        <div class="card-header">
            <div class="row">
                <div class="col-12">
                    <div class="table-responsive">
                        <table id="BookTable" class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Borrow Date</th>
                                    <th>Expected Return Date</th>
                                    <th>Availability</th>
                                    <th>Return Date</th>
                                    <th>Book Name</th>
                                    <th>Student Name</th>
                                    <th>Department</th>
                                    <th style="width:200px">Actions</th>
                                </tr>
                            </thead>
                        @foreach (var borrows in Model.Borrows)
                        {
                            @if (borrows.ReturnDate > borrows.ExpectedReturnDate || borrows.ExpectedReturnDate < DateTime.Now && borrows.Book.IsBorrowed == true)
                            {
                                <tr style="background-color:#A30000;color:white">
                                    <td>@borrows.BorrowDate.ToString("yyyy-MM-dd")</td>
                                    <td>@borrows.ExpectedReturnDate.ToString("yyyy-MM-dd")</td>

                                    @if (borrows.Book.IsBorrowed)
                                    {
                                        <td>Borrowed</td>
                                    }
                                    else
                                    {
                                        <td>Returned</td>
                                    }
                                    <td>@borrows.ReturnDate?.ToString("yyyy-MM-dd")</td>
                                    <td>@borrows.Book?.BookTitle</td>
                                    <td>@borrows.Student?.StudentName</td>
                                    <td>@borrows.Book?.BookCategories.Department.Name</td>
                                    @if (borrows.Book.IsBorrowed)
                                    {
                                        <td>
                                            <a href="/Borrow/Create/@borrows.Id" type="button" class="update-button btn btn-sm bg-secondary edit-role" name="Update">
                                                <i class="fas fa-pencil-alt"></i> Update
                                            </a>
                                            <button type="button" class="delete-button btn btn-sm bg-danger" name="Delete" borrow-id="@borrows.Id" borrow-book-name="@borrows.Book.BookTitle" borrow-student-name="@borrows.Student.StudentName">
                                                <i class="fas fa-trash"></i> Delete
                                            </button>
                                        </td>
                                    }
                                    else
                                    {
                                        <td>
                                            <button location="/Borrow/Create/@borrows.Id" disabled type="button" class="update-button btn btn-sm bg-secondary edit-role" name="Update">
                                                <i class="fas fa-pencil-alt"></i> Update
                                            </button>
                                            <button type="button" disabled class="delete-button btn btn-sm bg-danger" name="Delete" borrow-id="@borrows.Id">
                                                <i class="fas fa-trash"></i> Delete
                                            </button>
                                        </td>
                                    }
                                </tr>
                            }
                            else{
                                <tr>
                                    <td>@borrows.BorrowDate.ToString("yyyy-MM-dd")</td>
                                    <td>@borrows.ExpectedReturnDate.ToString("yyyy-MM-dd")</td>

                                    @if (borrows.Book.IsBorrowed)
                                    {
                                        <td>Borrowed</td>
                                    }
                                    else
                                    {
                                        <td>Returned</td>
                                    }
                                    <td>@borrows.ReturnDate?.ToString("yyyy-MM-dd")</td>
                                    <td>@borrows.Book?.BookTitle</td>
                                    <td>@borrows.Student?.StudentName</td>
                                    <td>@borrows.Book?.BookCategories.Department.Name</td>
                                    @if (borrows.Book.IsBorrowed)
                                    {
                                        <td>
                                            <a href="/Borrow/Create/@borrows.Id" type="button" class="update-button btn btn-sm bg-primary edit-role" name="Update">
                                                <i class="fas fa-pencil-alt"></i> Update
                                            </a>
                                            <button type="button" class="delete-button btn btn-sm bg-danger" name="Delete" borrow-id="@borrows.Id">
                                                <i class="fas fa-trash"></i> Delete
                                            </button>
                                        </td>
                                    }
                                    else
                                    {
                                        <td>
                                            <button location="/Borrow/Create/@borrows.Id" disabled type="button" class="update-button btn btn-sm btn-primary edit-role" name="Update">
                                                <i class="fas fa-pencil-alt"></i> Update
                                            </button>
                                            <button type="button" disabled class="delete-button btn btn-sm bg-danger" name="Delete" borrow-id="@borrows.Id">
                                                <i class="fas fa-trash"></i> Delete
                                            </button>
                                        </td>
                                    }
                                </tr>
                            }
                            
                        }
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>